// This function draws a rainbow pattern

fun draw_pattern(offset:int) -> bool {
    let colors:colour[] = [#FF0000, #FF7F00, #FFFF00, #00FF00, #0000FF, #4B0082, #9400D3]; // Rainbow colors

    for (let x:int = 0; x < __width; x = x + 3) {
        for (let y:int = 0; y < __height; y = y + 3) {                        
            let colorIndex:int = (x + y + offset) % 7;
            __write_box x, y, 2, 2, colors[colorIndex];
        }
    }

    return true;
}

let offset:int = 0;
let r:bool = false;

while (true) {
    r = draw_pattern(offset);
    offset = offset + 1;
    __delay 10; // Delay to make the movement visible
}



ParIR Code:

.main
push 2
oframe
push 0
push 0
push 0
st
push 0
push 1
push 0
st
push 1
push #PC+4
cjmp
push #PC+19
jmp
push [0:0]
push 1
push .draw_pattern
call
push 1
push 0
st
push 1
push [0:0]
add
push 0
push 0
st
push 10
delay
push #PC-20
jmp
push 0
ret
halt
.draw_pattern
push 8
alloc
push 9699539
push 4915330
push 255
push 65280
push 16776960
push 16744192
push 16711680
push 7
push 1
push 0
sta
push 1
oframe
push 0
push 0
push 0
st
width
push [0:0]
lt
push #PC+4
cjmp
push #PC+52
jmp
push 1
oframe
push 0
push 0
push 0
st
height
push [0:0]
lt
push #PC+4
cjmp
push #PC+30
jmp
push 1
oframe
push 7
push [0:3]
push [0:1]
push [0:2]
add
add
mod
push 0
push 0
st
push [0:0]
push +[1:3]
push 2
push 2
push [0:1]
push [0:2]
writebox
cframe
push 1
push [0:0]
add
push 0
push 0
st
push #PC-33
jmp
cframe
push 1
push [0:0]
add
push 0
push 0
st
push #PC-55
jmp
cframe
push 1
ret
