
// This function prints the fibonacci value of an input.
// This tests functions and while loops.

    fun Fib(n:int) -> int {
        if (n <= 1) {             
            return n;
        }

        let prev:int = 0;           
        let curr:int = 1;          
        let i:int    = 2;

        while (i <= n) {           
            let next:int = prev + curr;

            prev = curr;           
            curr = next;

            i = i + 1;
        }

        return curr;                
    }

    let k:int = 7;                  
    let result:int = Fib(k);

    __print k;  // Print the input      
    __print result;  // Print the fibonacci value of the input


// Result is 13

ParIR Code:

.main
push 2
oframe
push 7
push 0
push 0
st
push [0:0]
push 1
push .Fib
call
push 1
push 0
st
push [0:0]
print
push [1:0]
print
push 0
ret
halt
.Fib
push 4
alloc
push 1
push [0:0]
le
push #PC+4
cjmp
push #PC+4
jmp
push [0:0]
ret
push 0
push 1
push 0
st
push 1
push 2
push 0
st
push 2
push 3
push 0
st
push [0:0]
push [3:0]
le
push #PC+4
cjmp
push #PC+27
jmp
push 1
oframe
push [2:1]
push [1:1]
add
push 0
push 0
st
push [2:1]
push 1
push 1
st
push [0:0]
push 2
push 1
st
push 1
push [3:1]
add
push 3
push 1
st
cframe
push #PC-30
jmp
push [2:0]
ret
